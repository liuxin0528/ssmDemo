<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:tx="http://www.springframework.org/schema/tx"   
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd  
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd  
    http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  ">
	
	<!-- 自动扫描 把controller移除-->
	<context:component-scan base-package="com.zongheng.ssm">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- 引入配置文件 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties"></property>
	</bean>
	
	<!-- 配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${jdbc.initialSize}" />
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${jdbc.maxActive}" />
		<!-- 连接池最大空间 -->
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<!-- 连接池最小空间 -->
		<property name="minIdle" value="${jdbc.minIdle}"/>
		<!-- 连接最大等待时间 -->
		<property name="maxWait" value="${jdbc.maxWait}"/>
	</bean>
	
	<!-- spring和 Mybatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- spring中数据源引用 -->
		<property name="dataSource" ref="dataSource"/>
		<!-- 自动扫描mapping.xml文件  当我们的Mapper文件跟对应的Mapper接口处于同一位置的时候可以不用指定该属性的值-->
		<property name="mapperLocations" value="classpath:com/zongheng/ssm/mapping/*.xml"></property>
		
		<!-- Mybatis自身的配置文件，一般用来声明别名 -->
		<property name="configLocation" value="classpath:/mybatis-Configuration.xml" />
	</bean>
	
	<!-- DAO接口所在包名，Spring会自动查找其下的类:映射接口类文件(.java)和映射XML文件(.xml)需要放在相同的包下 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.zongheng.ssm.dao"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
	
	<!-- (事务管理)transaction manager,use JtaTransactionManager for global tx -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	
	<!-- 为所有的delete/save/update/add 开头的方法添加上了一致性事务，对其他方法添加上了只读事务 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="delete*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
			<tx:method name="insert*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
			<tx:method name="save*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
			<tx:method name="add*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
			<tx:method name="*" propagation="REQUIRED" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="transactionmobilePointCut"
			expression="execution(* com.zongheng.ssm.*.*.service..*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="transactionmobilePointCut" />
	</aop:config>
	
	
</beans>  


